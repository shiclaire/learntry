# copy of task 2 playbook with our changes made for assignment 2
- name: Create a sandbox instance
  hosts: localhost
  connection: local
  become: false # Don't use sudo for this part
  gather_facts: False
  vars:
    key_name: newkey # This is the name of the key we set up in the instructions for task 1 & 2.
    instance_type: t2.micro
    security_group: my-new-security-group
    image: ami-6cd6f714
    region: us-west-2
  tasks:
    - name: Create a security group
      local_action:
        module: ec2_group
        name: "{{ security_group }}"
        description: Security Group for webserver Servers
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
      register: basic_firewall

    - name: Launch instance
      ec2:
         key_name: "{{ key_name }}"
         group: "{{ security_group }}"
         instance_type: "{{ instance_type }}"
         image: "{{ image }}"
         wait: true
         region: "{{ region }}"
      register: ec2

    - name: Add new instance to host group
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: launched
        ansible_user: ec2-user
        ansible_ssh_private_key_file: /var/www/html/newkey.pem
      with_items: "{{ ec2.instances }}"

    - name: Add tag to Instance(s)
      ec2_tag:
          resource: "{{ item.id }}"
          region: "{{ region }}"
          state: "present"
          tags: {"type":"clientsites"}
      with_items: "{{ ec2.instances }}"

    - name: Wait for SSH to come up (please wait a few minutes)
      delegate_to: "{{ item.public_dns_name }}"
      wait_for_connection:
        delay: 60
        timeout: 300
      with_items: "{{ ec2.instances }}"

- name: "Install updates/PHP/Apache/MariaDB"
  hosts: launched
  become: yes
  gather_facts: yes
  become_user: root
  tasks:
    - name: install package updates
      yum:
        name: '*'
        state: latest

    - name: install PHP
      command: amazon-linux-extras install -y lamp-mariadb10.2-php7.2 php7.2

    - name: install Apache and MariaDB
      yum:
        name: "{{ packages }}"
      vars:
        packages:
        - httpd
        - mariadb-server

- name: "Start and enable Apache"
  hosts: launched
  become: yes
  become_user: root
  tasks:
    - name: Start Apache server
      service:
        name: httpd
        state: started
        enabled: yes

- name: "Set permissions"
  hosts: launched
  become: yes
  become_user: root
  tasks:
    - name: Add ourself to Apache group
      user:
        name: ec2-user
        groups: apache
        append: yes


    - name: Give apache group ownership of /var/www and add permissions
      file:
        path: /var/www
        owner: ec2-user
        group: apache
        mode: 02775
        recurse: yes

    - name: Add group write permissions to /var/www
      command: find /var/www -type f -exec sudo chmod 0664 {} \;

- name: "Start DB server"
  hosts: launched
  become: yes
  become_user: root
  tasks:
    - name: Start MariaDB
      service:
        name: mariadb
        state: started
        enabled: yes

- name: "Install WordPress"
  hosts: launched
  become: yes
  become_user: root
  tasks:
    - name: Download WordPress CLI
      get_url:
        url=https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
        dest=/var/www/html/
    - name: Make the WP CLI executable
      file:
        path: /var/www/html/wp-cli.phar
        owner: ec2-user
        group: apache
        mode: +x
    - name: copying the file to the bin
      command: mv /var/www/html/wp-cli.phar /usr/local/bin/wp
    - name: Downloading WordPress
      command: /usr/local/bin/wp core download --path="/var/www/html/"
    - name: Configuring our wp-config file
      command: /usr/local/bin/wp core config --dbname=wpdb --dbuser=root --dbpass= --path="/var/www/html/"
    - name: Creating our database
      command: /usr/local/bin/wp db create --path="/var/www/html/"
    - name: Installing WordPress
      shell: /usr/local/bin/wp core install --url="http://$(curl http://169.254.169.254/latest/meta-data/public-ipv4)" --title="Assignment 2 WordPress Site" --admin_user="group_1" --admin_password="alpha wario salamander" --admin_email="test@test.co.nz" --path="/var/www/html/"
